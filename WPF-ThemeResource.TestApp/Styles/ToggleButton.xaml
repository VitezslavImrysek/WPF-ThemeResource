<!--
    This Source Code Form is subject to the terms of the MIT License.
    If a copy of the MIT was not distributed with this file, You can obtain one at https://opensource.org/licenses/MIT.
    Copyright (C) Leszek Pomianowski and WPF UI Contributors.
    All Rights Reserved.
    
    Based on Microsoft XAML for Win UI
    Copyright (c) Microsoft Corporation. All Rights Reserved.
-->

<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <Thickness x:Key="ToggleButtonPadding">11,5,11,6</Thickness>
    <Thickness x:Key="ToggleButtonBorderThemeThickness">1</Thickness>
    <Thickness x:Key="ToggleButtonIconMargin">0,0,8,0</Thickness>

    <Style x:Key="DefaultToggleButtonStyle" TargetType="{x:Type ToggleButton}">
        <!--  Universal WPF UI focus  -->
        <Setter Property="FocusVisualStyle" Value="{ThemeResource ResourceKey=DefaultControlFocusVisualStyle}" />
        <!--  Universal WPF UI focus  -->
        <Setter Property="Background" Value="{ThemeResource ResourceKey=ToggleButtonBackground}" />
        <Setter Property="Foreground" Value="{ThemeResource ResourceKey=ToggleButtonForeground}" />
        <Setter Property="BorderBrush" Value="{ThemeResource ResourceKey=ControlElevationBorderBrush}" />
        <Setter Property="BorderThickness" Value="{StaticResource ToggleButtonBorderThemeThickness}" />
        <Setter Property="Padding" Value="{StaticResource ToggleButtonPadding}" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="FontSize" Value="{ThemeResource ResourceKey=ControlContentThemeFontSize}" />
        <Setter Property="FontWeight" Value="Normal" />
        <Setter Property="Border.CornerRadius" Value="{ThemeResource ResourceKey=ControlCornerRadius}" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border
                        x:Name="ContentBorder"
                        Width="{TemplateBinding Width}"
                        Height="{TemplateBinding Height}"
                        MinWidth="{TemplateBinding MinWidth}"
                        MinHeight="{TemplateBinding MinHeight}"
                        Padding="{TemplateBinding Padding}"
                        HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                        VerticalAlignment="{TemplateBinding VerticalAlignment}"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="{TemplateBinding Border.CornerRadius}">
                        <ContentPresenter
                            x:Name="ContentPresenter"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            Content="{TemplateBinding Content}"
                            TextElement.Foreground="{TemplateBinding Foreground}"
                            TextElement.FontSize="{TemplateBinding FontSize}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsEnabled" Value="False" />
                                <Condition Property="IsChecked" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" Value="{ThemeResource ResourceKey=ToggleButtonBackgroundDisabled}" />
                            <Setter Property="BorderBrush" Value="{ThemeResource ResourceKey=ToggleButtonBorderBrushDisabled}" />
                            <Setter TargetName="ContentPresenter" Property="TextElement.Foreground" Value="{ThemeResource ResourceKey=ToggleButtonForegroundDisabled}" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsEnabled" Value="False" />
                                <Condition Property="IsChecked" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" Value="{ThemeResource ResourceKey=ToggleButtonBackgroundCheckedDisabled}" />
                            <Setter Property="BorderBrush" Value="{ThemeResource ResourceKey=ToggleButtonBorderBrushCheckedDisabled}" />
                            <Setter TargetName="ContentPresenter" Property="TextElement.Foreground" Value="{ThemeResource ResourceKey=ToggleButtonForegroundCheckedDisabled}" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsEnabled" Value="True" />
                                <Condition Property="IsChecked" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" Value="{ThemeResource ResourceKey=ToggleButtonBackgroundChecked}" />
                            <Setter Property="BorderBrush" Value="{ThemeResource ResourceKey=AccentControlElevationBorderBrush}" />
                            <Setter TargetName="ContentPresenter" Property="TextElement.Foreground" Value="{ThemeResource ResourceKey=ToggleButtonForegroundChecked}" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True" />
                                <Condition Property="IsChecked" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" Value="{ThemeResource ResourceKey=ToggleButtonBackgroundPointerOver}" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True" />
                                <Condition Property="IsChecked" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" Value="{ThemeResource ResourceKey=ToggleButtonForegroundCheckedPointerOver}" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsPressed" Value="True" />
                                <Condition Property="IsChecked" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" Value="{ThemeResource ResourceKey=ToggleButtonBackgroundPressed}" />
                            <Setter Property="BorderBrush" Value="{ThemeResource ResourceKey=ToggleButtonBorderBrushPressed}" />
                            <Setter TargetName="ContentPresenter" Property="TextElement.Foreground" Value="{ThemeResource ResourceKey=ToggleButtonForegroundPressed}" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsPressed" Value="True" />
                                <Condition Property="IsChecked" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" Value="{ThemeResource ResourceKey=ToggleButtonBackgroundCheckedPressed}" />
                            <Setter Property="BorderBrush" Value="{ThemeResource ResourceKey=ToggleButtonBorderBrushCheckedPressed}" />
                            <Setter TargetName="ContentPresenter" Property="TextElement.Foreground" Value="{ThemeResource ResourceKey=ToggleButtonForegroundCheckedPressed}" />
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style BasedOn="{StaticResource DefaultToggleButtonStyle}" TargetType="{x:Type ToggleButton}" />

</ResourceDictionary>